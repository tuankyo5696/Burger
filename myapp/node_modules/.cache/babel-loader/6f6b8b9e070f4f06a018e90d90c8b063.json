{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\trana\\\\OneDrive\\\\M\\xE1y t\\xEDnh\\\\Burger\\\\myapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\trana\\\\OneDrive\\\\M\\xE1y t\\xEDnh\\\\Burger\\\\myapp\\\\src\\\\containers\\\\BurgerBuilder\\\\BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport Aux from '../../hoc/Aux';\nimport Burger from './../../components/Burger/Burger';\nimport BuildControls from './../../components/Burger/BuildControls/BuildControls';\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n      },\n      totalPrice: 4\n    };\n\n    this.addIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      const updateCount = oldCount + 1;\n\n      const updatedIngredients = _objectSpread({}, this.state.ingredients);\n\n      updatedIngredients[type] = updateCount;\n      const priceAddition = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice + priceAddition;\n      this.setState({\n        ingredients: updatedIngredients,\n        totalPrice: newPrice\n      });\n    };\n\n    this.removeIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n\n      if (oldCount <= 0) {\n        return;\n      }\n\n      const updateCount = oldCount - 1;\n\n      const updatedIngredients = _objectSpread({}, this.state.ingredients);\n\n      updatedIngredients[type] = updateCount;\n      const priceAddition = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice - priceAddition;\n      this.setState({\n        ingredients: updatedIngredients,\n        totalPrice: newPrice\n      });\n    };\n  }\n\n  render() {\n    const disabledInfo = _objectSpread({}, this.state.ingredients);\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n      console.log(disabledInfo[key]);\n    }\n\n    return React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Burger, {\n      ingredients: this.state.ingredients,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(BuildControls, {\n      ingredientAdded: this.addIngredientHandler,\n      ingredientRemoved: this.removeIngredientHandler,\n      disabled: disabledInfo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default BurgerBuilder;","map":{"version":3,"sources":["C:\\Users\\trana\\OneDrive\\Máy tính\\Burger\\myapp\\src\\containers\\BurgerBuilder\\BurgerBuilder.js"],"names":["React","Component","Aux","Burger","BuildControls","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","state","ingredients","totalPrice","addIngredientHandler","type","oldCount","updateCount","updatedIngredients","priceAddition","oldPrice","newPrice","setState","removeIngredientHandler","render","disabledInfo","key","console","log"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\r\n\r\nimport Aux from '../../hoc/Aux';\r\nimport Burger from './../../components/Burger/Burger';\r\nimport BuildControls from './../../components/Burger/BuildControls/BuildControls';\r\n\r\nconst INGREDIENT_PRICES ={\r\n    salad : 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0.7\r\n};\r\n\r\n\r\nclass BurgerBuilder extends Component {\r\n    // constructor(props){\r\n    //     super(props);\r\n    //     this.state ={...}\r\n    // }\r\n    state = {\r\n            ingredients : {\r\n                salad : 0,\r\n                bacon : 0,\r\n                cheese : 0,\r\n                meat : 0\r\n            },\r\n            totalPrice  : 4\r\n\r\n    }\r\n    addIngredientHandler = (type) =>{\r\n        const oldCount = this.state.ingredients[type];\r\n        const updateCount = oldCount +1;\r\n        const updatedIngredients = {\r\n            ...this.state.ingredients\r\n        };\r\n        updatedIngredients[type] = updateCount;\r\n        const priceAddition = INGREDIENT_PRICES[type];\r\n        const oldPrice = this.state.totalPrice;\r\n        const newPrice = oldPrice + priceAddition;\r\n        this.setState({\r\n            ingredients : updatedIngredients,\r\n            totalPrice : newPrice\r\n        });\r\n    }\r\n    removeIngredientHandler = (type) => {\r\n        const oldCount = this.state.ingredients[type];\r\n        if(oldCount <=0){\r\n            return ;\r\n        }\r\n        const updateCount = oldCount -1;\r\n        const updatedIngredients = {\r\n            ...this.state.ingredients\r\n        };\r\n        updatedIngredients[type] = updateCount;\r\n        const priceAddition = INGREDIENT_PRICES[type];\r\n        const oldPrice = this.state.totalPrice;\r\n        const newPrice = oldPrice - priceAddition;\r\n        this.setState({\r\n            ingredients : updatedIngredients,\r\n            totalPrice : newPrice\r\n        });\r\n    }\r\n    render(){\r\n        const disabledInfo = {\r\n            ...this.state.ingredients\r\n        }\r\n        for(let key in disabledInfo){\r\n            disabledInfo[key]= disabledInfo[key] <=0\r\n            console.log(disabledInfo[key])\r\n        }\r\n        \r\n        return (\r\n            <Aux>\r\n                <Burger ingredients = {this.state.ingredients}/>\r\n                <BuildControls \r\n                        ingredientAdded = {this.addIngredientHandler}\r\n                        ingredientRemoved= {this.removeIngredientHandler}\r\n                        disabled = {disabledInfo}\r\n                />\r\n            </Aux>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BurgerBuilder;"]},"metadata":{},"sourceType":"module"}