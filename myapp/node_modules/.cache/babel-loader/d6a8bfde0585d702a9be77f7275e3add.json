{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HOME\\\\Desktop\\\\Burger\\\\myapp\\\\src\\\\containers\\\\Signup\\\\Signup.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from './../../store/actions/index';\nimport classes from './Signup.css';\nimport { Formik, Form, Field } from 'formik';\nimport * as Yup from 'yup';\n\nclass Signup extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.submitHandler = account => {\n      this.props.onAuth(account.username, account.password, account.email);\n    };\n  }\n\n  render() {\n    const SignupSchema = Yup.object().shape({\n      username: Yup.string().min(2, 'Too Short!').max(50, 'Too long!').required('Username is required'),\n      password: Yup.string().min(8, 'Too Short!').max(50, 'Too long!').required('Password is required'),\n      email: Yup.string().email('Invalid email').required('Email is required')\n    });\n    let errorMessage = null;\n\n    if (this.props.error) {\n      errorMessage = React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, this.props.error.message);\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, errorMessage, React.createElement(Formik, {\n      initialValues: {\n        username: '',\n        password: '',\n        email: ''\n      },\n      validationSchema: SignupSchema,\n      onSubmit: values => {\n        this.submitHandler(values);\n        alert('Create account successfully');\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, ({\n      errors,\n      touched\n    }) => React.createElement(\"div\", {\n      className: classes.To,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Form, {\n      className: classes.Form,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Sign up\"), React.createElement(\"label\", {\n      className: classes.Label,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Username\"), React.createElement(Field, {\n      name: \"username\",\n      className: classes.Input,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), errors.username && touched.username ? React.createElement(\"div\", {\n      className: classes.Invalid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, errors.username) : null, React.createElement(\"label\", {\n      className: classes.Label,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Password\"), React.createElement(Field, {\n      name: \"password\",\n      type: \"password\",\n      className: classes.Input,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), errors.password && touched.password ? React.createElement(\"div\", {\n      className: classes.Invalid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, errors.password) : null, React.createElement(\"label\", {\n      className: classes.Label,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Email\"), React.createElement(Field, {\n      name: \"email\",\n      type: \"email\",\n      className: classes.Input,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), errors.email && touched.email ? React.createElement(\"div\", {\n      className: classes.Invalid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, errors.email) : null, React.createElement(\"button\", {\n      type: \"submit\",\n      className: classes.Success,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"SUBMIT\")))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    error: state.auth.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: (username, password, email) => dispatch(actions.auth(username, password, email))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);","map":{"version":3,"sources":["C:\\Users\\HOME\\Desktop\\Burger\\myapp\\src\\containers\\Signup\\Signup.js"],"names":["React","Component","connect","actions","classes","Formik","Form","Field","Yup","Signup","submitHandler","account","props","onAuth","username","password","email","render","SignupSchema","object","shape","string","min","max","required","errorMessage","error","message","values","alert","errors","touched","To","Label","Input","Invalid","Success","mapStateToProps","state","auth","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\r\n\r\nimport {connect} from 'react-redux';\r\nimport * as actions from './../../store/actions/index';\r\nimport classes from './Signup.css';\r\nimport {Formik,Form,Field} from 'formik'   \r\nimport * as Yup from 'yup';\r\nclass Signup extends Component {\r\n   \r\n    submitHandler = (account) => {\r\n        this.props.onAuth(account.username,account.password,account.email);\r\n    }\r\n    render(){\r\n    \r\n        const SignupSchema = Yup.object().shape({\r\n            username: Yup.string()\r\n            .min(2, 'Too Short!')\r\n            .max(50, 'Too long!')\r\n            .required('Username is required'),\r\n            password: Yup.string()\r\n            .min(8, 'Too Short!')\r\n            .max(50, 'Too long!')\r\n            .required('Password is required'),\r\n            email: Yup.string()\r\n            .email('Invalid email')\r\n            .required('Email is required')\r\n        })\r\n        let errorMessage = null;\r\n        if(this.props.error){\r\n            errorMessage = (\r\n                <p>{this.props.error.message}</p>\r\n            )\r\n        }\r\n        return(\r\n            <div>\r\n                {errorMessage}\r\n                 <Formik \r\n                initialValues = {{\r\n                    username: '',\r\n                    password: '',\r\n                    email: ''\r\n                }}\r\n                 validationSchema = {SignupSchema}\r\n                 onSubmit = {values => {\r\n                 \r\n                    this.submitHandler(values)\r\n                   alert('Create account successfully')\r\n                 }}>\r\n            {({errors,touched}) => (\r\n               <div className = {classes.To}>\r\n                   \r\n                     <Form className = {classes.Form} >\r\n                     <h2>Sign up</h2>\r\n                         <label className={classes.Label}>Username</label>\r\n                        <Field name=\"username\" className ={classes.Input} />\r\n                        {errors.username && touched.username ? (\r\n                            <div className={classes.Invalid} >{errors.username}</div>\r\n                        ) : null}\r\n                         <label  className={classes.Label}>Password</label>\r\n                        <Field name=\"password\" type=\"password\"className ={classes.Input} />\r\n                        {errors.password && touched.password ? (\r\n                            <div className={classes.Invalid} >{errors.password}</div>\r\n                        ) : null}\r\n                        <label  className={classes.Label}>Email</label>\r\n                        <Field name=\"email\" type=\"email\"  className ={classes.Input}/>\r\n                        {errors.email && touched.email ? <div className={classes.Invalid}>{errors.email}</div> : null}\r\n                        <button type=\"submit\" className={classes.Success}>SUBMIT</button>\r\n                    </Form>\r\n               </div> \r\n            )} \r\n            </Formik>\r\n            </div>\r\n           \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state  => {\r\n    return {\r\n\r\n      error: state.auth.error     \r\n    }\r\n}\r\n\r\nconst mapDispatchToProps  = dispatch  => {\r\n    return {\r\n        onAuth : (username,password,email) => dispatch(actions.auth(username,password,email))\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Signup);"]},"metadata":{},"sourceType":"module"}