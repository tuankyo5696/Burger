{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HOME\\\\Desktop\\\\Burger\\\\myapp\\\\src\\\\containers\\\\Signup\\\\Signup.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from './../../store/actions/index';\nimport classes from './Signup.css';\nimport { Formik, Form, Field } from 'formik';\nimport * as Yup from 'yup';\n\nclass Signup extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.submitHandler = account => {\n      this.props.onAuth(account.email, account.password, this.props.isSignup);\n      console.log(this.props.isSignup);\n    };\n  }\n\n  render() {\n    const SignupSchema = Yup.object().shape({\n      password: Yup.string().min(8, 'Too Short!').max(50, 'Too long!').required('Password is required'),\n      email: Yup.string().email('Invalid email').required('Email is required')\n    });\n    let errorMessage = null;\n\n    if (this.props.error) {\n      errorMessage = React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, this.props.error.message);\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"abcdS\"));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.auth.loading,\n    error: state.auth.error,\n    isSignup: state.auth.isSignup\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: (email, password, isSignup) => dispatch(actions.auth(email, password, isSignup))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);","map":{"version":3,"sources":["C:\\Users\\HOME\\Desktop\\Burger\\myapp\\src\\containers\\Signup\\Signup.js"],"names":["React","Component","connect","actions","classes","Formik","Form","Field","Yup","Signup","submitHandler","account","props","onAuth","email","password","isSignup","console","log","render","SignupSchema","object","shape","string","min","max","required","errorMessage","error","message","mapStateToProps","state","loading","auth","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AAEA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAO,KAAKC,OAAZ,MAAyB,6BAAzB;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,SAAQC,MAAR,EAAeC,IAAf,EAAoBC,KAApB,QAAgC,QAAhC;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;;AACA,MAAMC,MAAN,SAAqBR,SAArB,CAA+B;AAAA;AAAA;;AAAA,SAE3BS,aAF2B,GAEVC,OAAD,IAAa;AACzB,WAAKC,KAAL,CAAWC,MAAX,CAAkBF,OAAO,CAACG,KAA1B,EAAgCH,OAAO,CAACI,QAAxC,EAAiD,KAAKH,KAAL,CAAWI,QAA5D;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAL,CAAWI,QAAvB;AACH,KAL0B;AAAA;;AAM3BG,EAAAA,MAAM,GAAE;AAEJ,UAAMC,YAAY,GAAGZ,GAAG,CAACa,MAAJ,GAAaC,KAAb,CAAmB;AACpCP,MAAAA,QAAQ,EAAEP,GAAG,CAACe,MAAJ,GACTC,GADS,CACL,CADK,EACF,YADE,EAETC,GAFS,CAEL,EAFK,EAED,WAFC,EAGTC,QAHS,CAGA,sBAHA,CAD0B;AAKpCZ,MAAAA,KAAK,EAAEN,GAAG,CAACe,MAAJ,GACNT,KADM,CACA,eADA,EAENY,QAFM,CAEG,mBAFH;AAL6B,KAAnB,CAArB;AASA,QAAIC,YAAY,GAAG,IAAnB;;AACA,QAAG,KAAKf,KAAL,CAAWgB,KAAd,EAAoB;AAChBD,MAAAA,YAAY,GACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAKf,KAAL,CAAWgB,KAAX,CAAiBC,OAArB,CADJ;AAGH;;AACD,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CADJ;AAMH;;AA7B0B;;AAgC/B,MAAMC,eAAe,GAAGC,KAAK,IAAK;AAC9B,SAAO;AACLC,IAAAA,OAAO,EAAED,KAAK,CAACE,IAAN,CAAWD,OADf;AAELJ,IAAAA,KAAK,EAAEG,KAAK,CAACE,IAAN,CAAWL,KAFb;AAGLZ,IAAAA,QAAQ,EAAEe,KAAK,CAACE,IAAN,CAAWjB;AAHhB,GAAP;AAKH,CAND;;AAQA,MAAMkB,kBAAkB,GAAIC,QAAQ,IAAK;AACrC,SAAO;AACHtB,IAAAA,MAAM,EAAG,CAACC,KAAD,EAAOC,QAAP,EAAgBC,QAAhB,KAA6BmB,QAAQ,CAAChC,OAAO,CAAC8B,IAAR,CAAanB,KAAb,EAAmBC,QAAnB,EAA4BC,QAA5B,CAAD;AAD3C,GAAP;AAGH,CAJD;;AAKA,eAAed,OAAO,CAAC4B,eAAD,EAAiBI,kBAAjB,CAAP,CAA4CzB,MAA5C,CAAf","sourcesContent":["import React,{Component} from 'react';\r\n\r\nimport {connect} from 'react-redux';\r\nimport * as actions from './../../store/actions/index';\r\nimport classes from './Signup.css';\r\nimport {Formik,Form,Field} from 'formik'   \r\nimport * as Yup from 'yup';\r\nclass Signup extends Component {\r\n \r\n    submitHandler = (account) => {\r\n        this.props.onAuth(account.email,account.password,this.props.isSignup);\r\n        console.log(this.props.isSignup);\r\n    }\r\n    render(){\r\n    \r\n        const SignupSchema = Yup.object().shape({\r\n            password: Yup.string()\r\n            .min(8, 'Too Short!')\r\n            .max(50, 'Too long!')\r\n            .required('Password is required'),\r\n            email: Yup.string()\r\n            .email('Invalid email')\r\n            .required('Email is required')\r\n        })\r\n        let errorMessage = null;\r\n        if(this.props.error){\r\n            errorMessage = (\r\n                <p>{this.props.error.message}</p>\r\n            )\r\n        }\r\n        return(\r\n            <div>\r\n              <h1>abcdS</h1>\r\n            </div>\r\n           \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state  => {\r\n    return {\r\n      loading: state.auth.loading,\r\n      error: state.auth.error ,\r\n      isSignup: state.auth.isSignup    \r\n    }\r\n}\r\n\r\nconst mapDispatchToProps  = dispatch  => {\r\n    return {\r\n        onAuth : (email,password,isSignup) => dispatch(actions.auth(email,password,isSignup))\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Signup);"]},"metadata":{},"sourceType":"module"}