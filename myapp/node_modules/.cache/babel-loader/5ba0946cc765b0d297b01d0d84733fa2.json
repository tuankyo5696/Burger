{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\HOME\\\\Desktop\\\\Burger\\\\myapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\HOME\\\\Desktop\\\\Burger\\\\myapp\\\\src\\\\containers\\\\Orders\\\\Orders.js\";\nimport React, { Component } from 'react';\nimport axios from './../../axios-order';\nimport Order from './../../components/Order/Order';\nimport withErrorHandler from './../../hoc/withErrorHandle/withErrorHandle';\n\nclass Orders extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      orders: [],\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    axios.get('/orders.json').then(res => {\n      const fetchedOrders = [];\n\n      for (let key in res.data) {\n        fetchedOrders.push(_objectSpread({}, res.data[key], {\n          id: key\n        }));\n        console.log(res);\n      }\n\n      this.setState({\n        loading: false,\n        orders: fetchOrders\n      });\n    }).catch(err => {\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, this.state.orders.map(order => React.createElement(Order, {\n      key: order.id,\n      ingredients: order.ingredients,\n      price: order.price,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default withErrorHandler(Orders, axios);","map":{"version":3,"sources":["C:\\Users\\HOME\\Desktop\\Burger\\myapp\\src\\containers\\Orders\\Orders.js"],"names":["React","Component","axios","Order","withErrorHandler","Orders","state","orders","loading","componentDidMount","get","then","res","fetchedOrders","key","data","push","id","console","log","setState","fetchOrders","catch","err","render","map","order","ingredients","price"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AAEA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,KAAP,MAAkB,gCAAlB;AACA,OAAOC,gBAAP,MAA6B,6CAA7B;;AACA,MAAMC,MAAN,SAAqBJ,SAArB,CAA+B;AAAA;AAAA;AAAA,SAC3BK,KAD2B,GACnB;AACJC,MAAAA,MAAM,EAAE,EADJ;AAEJC,MAAAA,OAAO,EAAG;AAFN,KADmB;AAAA;;AAK3BC,EAAAA,iBAAiB,GAAE;AACfP,IAAAA,KAAK,CAACQ,GAAN,CAAU,cAAV,EAA0BC,IAA1B,CAA+BC,GAAG,IAAE;AAChC,YAAMC,aAAa,GAAG,EAAtB;;AACA,WAAI,IAAIC,GAAR,IAAeF,GAAG,CAACG,IAAnB,EAAwB;AACpBF,QAAAA,aAAa,CAACG,IAAd,mBACOJ,GAAG,CAACG,IAAJ,CAASD,GAAT,CADP;AAEIG,UAAAA,EAAE,EAAEH;AAFR;AAIAI,QAAAA,OAAO,CAACC,GAAR,CAAYP,GAAZ;AACH;;AACD,WAAKQ,QAAL,CAAc;AAACZ,QAAAA,OAAO,EAAG,KAAX;AAAkBD,QAAAA,MAAM,EAAEc;AAA1B,OAAd;AACH,KAVD,EAUGC,KAVH,CAUSC,GAAG,IAAE;AACV,WAAKH,QAAL,CAAc;AAACZ,QAAAA,OAAO,EAAE;AAAV,OAAd;AACH,KAZD;AAcH;;AACDgB,EAAAA,MAAM,GAAE;AACJ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKlB,KAAL,CAAWC,MAAX,CAAkBkB,GAAlB,CAAsBC,KAAK,IACxB,oBAAC,KAAD;AACI,MAAA,GAAG,EAAGA,KAAK,CAACT,EADhB;AAEI,MAAA,WAAW,EAAIS,KAAK,CAACC,WAFzB;AAGI,MAAA,KAAK,EAAID,KAAK,CAACE,KAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,CADL,CADJ;AAUH;;AAhC0B;;AAmC/B,eAAgBxB,gBAAgB,CAACC,MAAD,EAAQH,KAAR,CAAhC","sourcesContent":["import React,{Component} from 'react'\r\n\r\nimport axios from './../../axios-order';\r\nimport Order from './../../components/Order/Order';\r\nimport withErrorHandler from './../../hoc/withErrorHandle/withErrorHandle';\r\nclass Orders extends Component {\r\n    state = {\r\n        orders: [],\r\n        loading : true\r\n    }\r\n    componentDidMount(){\r\n        axios.get('/orders.json').then(res=>{\r\n            const fetchedOrders = [];\r\n            for(let key in res.data){\r\n                fetchedOrders.push({\r\n                    ...res.data[key],\r\n                    id: key\r\n                });\r\n                console.log(res);\r\n            } \r\n            this.setState({loading : false, orders: fetchOrders})\r\n        }).catch(err=>{\r\n            this.setState({loading: false})\r\n        })\r\n       \r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                {this.state.orders.map(order=>(\r\n                    <Order \r\n                        key= {order.id}\r\n                        ingredients = {order.ingredients}\r\n                        price = {order.price}/>\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default  withErrorHandler(Orders,axios) ;"]},"metadata":{},"sourceType":"module"}