{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\HOME\\\\Desktop\\\\Burger\\\\myapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport * as actionTypes from './../constants/actionTypes';\nconst initialState = {\n  ingredients: {\n    salad: 0,\n    bacon: 0,\n    cheese: 0,\n    meat: 0\n  },\n  totalPrice: 4\n};\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_INGREDIENT:\n      return _objectSpread({}, state, {\n        ingredients: _objectSpread({}, state.ingredients, {\n          [action.ingredientName]: state.ingredients[action.ingredientName] + 1\n        }),\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\n      });\n\n    case actionTypes.REMOVE_INGREDIENT:\n      return _objectSpread({}, state, {\n        ingredients: _objectSpread({}, state.ingredients, {\n          [action.ingredientName]: state.ingredients[action.ingredientName] - 1\n        }),\n        totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName]\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:\\Users\\HOME\\Desktop\\Burger\\myapp\\src\\store\\reducer\\index.js"],"names":["actionTypes","initialState","ingredients","salad","bacon","cheese","meat","totalPrice","INGREDIENT_PRICES","reducer","state","action","type","ADD_INGREDIENT","ingredientName","REMOVE_INGREDIENT"],"mappings":";AAAA,OAAO,KAAKA,WAAZ,MAA8B,4BAA9B;AACA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,WAAW,EAAE;AACTC,IAAAA,KAAK,EAAE,CADE;AAETC,IAAAA,KAAK,EAAE,CAFE;AAGTC,IAAAA,MAAM,EAAE,CAHC;AAITC,IAAAA,IAAI,EAAE;AAJG,GADI;AAOjBC,EAAAA,UAAU,EAAE;AAPK,CAArB;AAUA,MAAMC,iBAAiB,GAAG;AACtBL,EAAAA,KAAK,EAAE,GADe;AAEtBE,EAAAA,MAAM,EAAE,GAFc;AAGtBC,EAAAA,IAAI,EAAE,GAHgB;AAItBF,EAAAA,KAAK,EAAE;AAJe,CAA1B;;AAOA,MAAMK,OAAO,GAAG,CAAEC,KAAK,GAAGT,YAAV,EAAwBU,MAAxB,KAAoC;AAChD,UAASA,MAAM,CAACC,IAAhB;AACI,SAAKZ,WAAW,CAACa,cAAjB;AACI,+BACOH,KADP;AAEIR,QAAAA,WAAW,oBACJQ,KAAK,CAACR,WADF;AAEP,WAACS,MAAM,CAACG,cAAR,GAAyBJ,KAAK,CAACR,WAAN,CAAkBS,MAAM,CAACG,cAAzB,IAA2C;AAF7D,UAFf;AAMIP,QAAAA,UAAU,EAAEG,KAAK,CAACH,UAAN,GAAmBC,iBAAiB,CAACG,MAAM,CAACG,cAAR;AANpD;;AAQJ,SAAKd,WAAW,CAACe,iBAAjB;AACI,+BACOL,KADP;AAEIR,QAAAA,WAAW,oBACJQ,KAAK,CAACR,WADF;AAEP,WAACS,MAAM,CAACG,cAAR,GAAyBJ,KAAK,CAACR,WAAN,CAAkBS,MAAM,CAACG,cAAzB,IAA2C;AAF7D,UAFf;AAMIP,QAAAA,UAAU,EAAEG,KAAK,CAACH,UAAN,GAAmBC,iBAAiB,CAACG,MAAM,CAACG,cAAR;AANpD;;AAQJ;AACI,aAAOJ,KAAP;AApBR;AAsBH,CAvBD;;AAyBA,eAAeD,OAAf","sourcesContent":["import * as actionTypes  from './../constants/actionTypes';\r\nconst initialState = {\r\n    ingredients: {\r\n        salad: 0,\r\n        bacon: 0,\r\n        cheese: 0,\r\n        meat: 0\r\n    },\r\n    totalPrice: 4\r\n};\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0.7\r\n};\r\n\r\nconst reducer = ( state = initialState, action ) => {\r\n    switch ( action.type ) {\r\n        case actionTypes.ADD_INGREDIENT:\r\n            return {\r\n                ...state,\r\n                ingredients: {\r\n                    ...state.ingredients,\r\n                    [action.ingredientName]: state.ingredients[action.ingredientName] + 1\r\n                },\r\n                totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\r\n            };\r\n        case actionTypes.REMOVE_INGREDIENT:\r\n            return {\r\n                ...state,\r\n                ingredients: {\r\n                    ...state.ingredients,\r\n                    [action.ingredientName]: state.ingredients[action.ingredientName] - 1\r\n                },\r\n                totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}