{"ast":null,"code":"import * as type from './../constants/actionTypes';\nimport axios from 'axios';\nexport const authStart = () => {\n  return {\n    type: type.AUTH_START\n  };\n};\nexport const authFail = error => {\n  return {\n    type: type.AUTH_FAIL,\n    error: error\n  };\n};\nexport const authSuccess = (token, userId) => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    idToken: token,\n    userId: userId\n  };\n};\nexport const auth = (email, password, isSignup) => {\n  return dispatch => {\n    dispatch(authStart());\n    const authData = {\n      email: email,\n      password: password,\n      returnSecureToken: true\n    };\n    let url = 'https://www.googleapis.com/identitytoolkit/v3/relyingparty/signupNewUser?key=AIzaSyB5cHT6x62tTe-g27vBDIqWcwQWBSj3uiY';\n\n    if (!isSignup) {\n      url = 'https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=AIzaSyB5cHT6x62tTe-g27vBDIqWcwQWBSj3uiY';\n    }\n\n    axios.post(url, authData).then(response => {\n      console.log(response);\n      dispatch(authSuccess(response.data.idToken, response.data.localId));\n    }).catch(err => {\n      console.log(err);\n      dispatch(authFail(err));\n    });\n  };\n};","map":{"version":3,"sources":["C:\\Users\\HOME\\Desktop\\Burger\\myapp\\src\\store\\actions\\auth.js"],"names":["type","axios","authStart","AUTH_START","authFail","error","AUTH_FAIL","authSuccess","token","userId","actionTypes","AUTH_SUCCESS","idToken","auth","email","password","isSignup","dispatch","authData","returnSecureToken","url","post","then","response","console","log","data","localId","catch","err"],"mappings":"AAAA,OAAO,KAAKA,IAAZ,MAAsB,4BAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAC3B,SAAO;AACHF,IAAAA,IAAI,EAAEA,IAAI,CAACG;AADR,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHL,IAAAA,IAAI,EAAEA,IAAI,CAACM,SADR;AAEHD,IAAAA,KAAK,EAAEA;AAFJ,GAAP;AAIH,CALM;AAOP,OAAO,MAAME,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC1C,SAAO;AACHT,IAAAA,IAAI,EAAEU,WAAW,CAACC,YADf;AAEHC,IAAAA,OAAO,EAAEJ,KAFN;AAGHC,IAAAA,MAAM,EAAEA;AAHL,GAAP;AAKH,CANM;AAQP,OAAO,MAAMI,IAAI,GAAG,CAACC,KAAD,EAAOC,QAAP,EAAgBC,QAAhB,KAA6B;AAC7C,SAAOC,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAACf,SAAS,EAAV,CAAR;AACA,UAAMgB,QAAQ,GAAG;AACbJ,MAAAA,KAAK,EAAEA,KADM;AAEbC,MAAAA,QAAQ,EAAEA,QAFG;AAGbI,MAAAA,iBAAiB,EAAE;AAHN,KAAjB;AAKA,QAAIC,GAAG,GAAG,sHAAV;;AACA,QAAI,CAACJ,QAAL,EAAe;AACXI,MAAAA,GAAG,GAAG,uHAAN;AACH;;AACDnB,IAAAA,KAAK,CAACoB,IAAN,CAAWD,GAAX,EAAgBF,QAAhB,EACKI,IADL,CACUC,QAAQ,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAN,MAAAA,QAAQ,CAACV,WAAW,CAACgB,QAAQ,CAACG,IAAT,CAAcd,OAAf,EAAwBW,QAAQ,CAACG,IAAT,CAAcC,OAAtC,CAAZ,CAAR;AACH,KAJL,EAKKC,KALL,CAKWC,GAAG,IAAI;AACVL,MAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ;AACAZ,MAAAA,QAAQ,CAACb,QAAQ,CAACyB,GAAD,CAAT,CAAR;AACH,KARL;AASH,GApBD;AAqBC,CAtBE","sourcesContent":["import * as type from './../constants/actionTypes';\r\nimport axios from 'axios';\r\nexport const authStart = () => {\r\n    return {\r\n        type: type.AUTH_START\r\n    }\r\n}\r\n\r\nexport const authFail = (error) => {\r\n    return {\r\n        type: type.AUTH_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const authSuccess = (token, userId) => {\r\n    return {\r\n        type: actionTypes.AUTH_SUCCESS,\r\n        idToken: token,\r\n        userId: userId\r\n    };\r\n};\r\n\r\nexport const auth = (email,password,isSignup) => {\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        const authData = {\r\n            email: email,\r\n            password: password,\r\n            returnSecureToken: true\r\n        };\r\n        let url = 'https://www.googleapis.com/identitytoolkit/v3/relyingparty/signupNewUser?key=AIzaSyB5cHT6x62tTe-g27vBDIqWcwQWBSj3uiY';\r\n        if (!isSignup) {\r\n            url = 'https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=AIzaSyB5cHT6x62tTe-g27vBDIqWcwQWBSj3uiY';\r\n        }\r\n        axios.post(url, authData)\r\n            .then(response => {\r\n                console.log(response);\r\n                dispatch(authSuccess(response.data.idToken, response.data.localId));\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                dispatch(authFail(err));\r\n            });\r\n    };\r\n    }"]},"metadata":{},"sourceType":"module"}