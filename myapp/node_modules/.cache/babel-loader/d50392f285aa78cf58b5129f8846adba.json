{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HOME\\\\Desktop\\\\Burger\\\\myapp\\\\src\\\\components\\\\Burger\\\\Burger.js\";\nimport React from 'react';\nimport classes from './Burger.css';\nimport BurgerIngredient from './Burgeringredient/Burgeringredient';\n\nclass Burger extends Component {\n  render() {\n    let transformedIngredients = Object.keys(props.ingredients).map(igKey => {\n      return [...Array(props.ingredients[igKey])].map((_, i) => {\n        return React.createElement(BurgerIngredient, {\n          key: igKey + i,\n          type: igKey,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 10\n          },\n          __self: this\n        });\n      });\n    }).reduce((arr, el) => {\n      return arr.concat(el); // simply flattern\n    }, []);\n\n    if (transformedIngredients.length === 0) {\n      transformedIngredients = React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, \"Please start adding ingredients!\");\n    }\n\n    return React.createElement(\"div\", {\n      className: classes.Burger,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(BurgerIngredient, {\n      type: \"bread-top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }), transformedIngredients, React.createElement(BurgerIngredient, {\n      type: \"bread-bottom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }));\n  }\n\n}\n\n;\nexport default Burger;","map":{"version":3,"sources":["C:\\Users\\HOME\\Desktop\\Burger\\myapp\\src\\components\\Burger\\Burger.js"],"names":["React","classes","BurgerIngredient","Burger","Component","render","transformedIngredients","Object","keys","props","ingredients","map","igKey","Array","_","i","reduce","arr","el","concat","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,OAAP,MAAoB,cAApB;AACA,OAAOC,gBAAP,MAA6B,qCAA7B;;AACA,MAAMC,MAAN,SAAqBC,SAArB,CAA+B;AAC3BC,EAAAA,MAAM,GAAE;AACJ,QAAIC,sBAAsB,GAAGC,MAAM,CAACC,IAAP,CAAYC,KAAK,CAACC,WAAlB,EAA+BC,GAA/B,CACzBC,KAAK,IAAG;AACJ,aAAO,CAAC,GAAGC,KAAK,CAACJ,KAAK,CAACC,WAAN,CAAkBE,KAAlB,CAAD,CAAT,EAAqCD,GAArC,CAAyC,CAACG,CAAD,EAAGC,CAAH,KAAO;AACrD,eAAQ,oBAAC,gBAAD;AAAkB,UAAA,GAAG,EAAEH,KAAK,GAAEG,CAA9B;AAAiC,UAAA,IAAI,EAAIH,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AACD,OAFM,CAAP;AAGH,KALwB,EAMxBI,MANwB,CAMjB,CAACC,GAAD,EAAKC,EAAL,KAAU;AACd,aAAOD,GAAG,CAACE,MAAJ,CAAWD,EAAX,CAAP,CADc,CACS;AAC1B,KARwB,EAQvB,EARuB,CAA7B;;AASI,QAAGZ,sBAAsB,CAACc,MAAvB,KAAkC,CAArC,EAAuC;AACnCd,MAAAA,sBAAsB,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAAzB;AACH;;AACL,WACI;AAAK,MAAA,SAAS,EAAEL,OAAO,CAACE,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,gBAAD;AAAkB,MAAA,IAAI,EAAE,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAECG,sBAFD,EAGA,oBAAC,gBAAD;AAAkB,MAAA,IAAI,EAAE,cAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHA,CADJ;AAOH;;AArB0B;;AAuB9B;AAED,eAAeH,MAAf","sourcesContent":["import React from 'react';\r\n\r\nimport classes from './Burger.css';\r\nimport BurgerIngredient from './Burgeringredient/Burgeringredient';\r\nclass Burger extends Component {\r\n    render(){\r\n        let transformedIngredients = Object.keys(props.ingredients).map(\r\n            igKey =>{\r\n                return [...Array(props.ingredients[igKey])].map((_,i)=>{\r\n                  return  <BurgerIngredient key={igKey+ i} type = {igKey} />\r\n                });\r\n            })\r\n            .reduce((arr,el)=>{\r\n                return arr.concat(el); // simply flattern\r\n            },[])\r\n            if(transformedIngredients.length === 0){\r\n                transformedIngredients = <p>Please start adding ingredients!</p>\r\n            }\r\n        return(\r\n            <div className={classes.Burger}>\r\n            <BurgerIngredient type =\"bread-top\"/>\r\n            {transformedIngredients}\r\n            <BurgerIngredient type =\"bread-bottom\"/>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n};\r\n\r\nexport default Burger;"]},"metadata":{},"sourceType":"module"}